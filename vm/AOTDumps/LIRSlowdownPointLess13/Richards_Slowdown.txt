--- Execution profile ---
Total samples       : 518126
unknown_Java        : 27463 (5.30%)
not_walkable_Java   : 18 (0.00%)

--- 25288870238 ns (4.88%), 25285 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 25267619439 ns (4.88%), 25264 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 22064247772 ns (4.26%), 22061 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 16174217015 ns (3.12%), 16172 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 11313337541 ns (2.18%), 11312 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 10066490537 ns (1.94%), 10065 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 8158708331 ns (1.57%), 8158 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 7917377072 ns (1.53%), 7916 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 7431053660 ns (1.43%), 7430 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 7359320713 ns (1.42%), 7358 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 7354039850 ns (1.42%), 7353 samples
  [ 0] richards.Scheduler.lambda$createDevice$0
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008660.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 6078079732 ns (1.17%), 6077 samples
  [ 0] itable stub
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 5539742730 ns (1.07%), 5539 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 5445106799 ns (1.05%), 5444 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 5402637966 ns (1.04%), 5402 samples
  [ 0] richards.TaskState.isWaitingWithPacket
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 5347577753 ns (1.03%), 5347 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 5117729873 ns (0.99%), 5117 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createDevice$0
  [ 3] richards.Scheduler$$Lambda.0x00007f8550008660.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 5011668544 ns (0.97%), 5011 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 4979707220 ns (0.96%), 4979 samples
  [ 0] richards.RBObject.append
  [ 1] richards.TaskControlBlock.addInputAndCheckPriority
  [ 2] richards.Scheduler.queuePacket
  [ 3] richards.Scheduler.lambda$createHandler$1
  [ 4] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 5] richards.TaskControlBlock.runTask
  [ 6] richards.Scheduler.schedule
  [ 7] richards.Scheduler.start
  [ 8] Richards.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 4640477177 ns (0.90%), 4640 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 4637746261 ns (0.89%), 4637 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 4413758547 ns (0.85%), 4413 samples
  [ 0] richards.RBObject.append
  [ 1] richards.HandlerTaskDataRecord.deviceInAdd
  [ 2] richards.Scheduler.lambda$createHandler$1
  [ 3] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 4349803974 ns (0.84%), 4349 samples
  [ 0] richards.Scheduler.markWaiting
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 4309399189 ns (0.83%), 4309 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 4177659390 ns (0.81%), 4177 samples
  [ 0] richards.Scheduler.holdSelf
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 4121443777 ns (0.80%), 4121 samples
  [ 0] richards.Scheduler.markWaiting
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 3828651766 ns (0.74%), 3828 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3766655274 ns (0.73%), 3766 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3743483510 ns (0.72%), 3743 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 3695476323 ns (0.71%), 3695 samples
  [ 0] richards.Scheduler.lambda$createDevice$0
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008660.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3599510318 ns (0.69%), 3599 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3440461213 ns (0.66%), 3440 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 3434609162 ns (0.66%), 3434 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 3422307189 ns (0.66%), 3422 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 3229531163 ns (0.62%), 3229 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3148371620 ns (0.61%), 3148 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3057502592 ns (0.59%), 3057 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3027324277 ns (0.58%), 3027 samples
  [ 0] richards.RBObject.append
  [ 1] richards.TaskControlBlock.addInputAndCheckPriority
  [ 2] richards.Scheduler.queuePacket
  [ 3] richards.Scheduler.lambda$createHandler$1
  [ 4] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 5] richards.TaskControlBlock.runTask
  [ 6] richards.Scheduler.schedule
  [ 7] richards.Scheduler.start
  [ 8] Richards.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 3024530077 ns (0.58%), 3024 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2991348686 ns (0.58%), 2991 samples
  [ 0] richards.Scheduler.lambda$createDevice$0
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008660.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2983373376 ns (0.58%), 2983 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] [unknown_Java]

--- 2925380993 ns (0.56%), 2925 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2874507998 ns (0.55%), 2874 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2833425665 ns (0.55%), 2833 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2832348718 ns (0.55%), 2832 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2829359080 ns (0.55%), 2829 samples
  [ 0] richards.TaskControlBlock.getIdentity
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 2827576775 ns (0.55%), 2827 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createDevice$0
  [ 3] richards.Scheduler$$Lambda.0x00007f8550008660.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2778344269 ns (0.54%), 2778 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2760438222 ns (0.53%), 2760 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2736466578 ns (0.53%), 2736 samples
  [ 0] richards.Scheduler.release
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2702389836 ns (0.52%), 2702 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2672273535 ns (0.52%), 2672 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2653308193 ns (0.51%), 2653 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2652368421 ns (0.51%), 2652 samples
  [ 0] richards.Scheduler.holdSelf
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2649433180 ns (0.51%), 2649 samples
  [ 0] richards.Scheduler.release
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2587346146 ns (0.50%), 2587 samples
  [ 0] richards.Scheduler.lambda$createDevice$0
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008660.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2573338496 ns (0.50%), 2573 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] [unknown_Java]

--- 2450406038 ns (0.47%), 2450 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 2380439516 ns (0.46%), 2380 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2372308295 ns (0.46%), 2372 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2291311559 ns (0.44%), 2291 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 2242359390 ns (0.43%), 2242 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f8550008660.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 2206324458 ns (0.43%), 2206 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2165301472 ns (0.42%), 2165 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2136455501 ns (0.41%), 2136 samples
  [ 0] richards.RBObject.append
  [ 1] richards.TaskControlBlock.addInputAndCheckPriority
  [ 2] richards.Scheduler.queuePacket
  [ 3] richards.Scheduler.lambda$createHandler$1
  [ 4] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 5] richards.TaskControlBlock.runTask
  [ 6] richards.Scheduler.schedule
  [ 7] richards.Scheduler.start
  [ 8] Richards.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 2064302206 ns (0.40%), 2064 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 2005167127 ns (0.39%), 2005 samples
  [ 0] richards.TaskState.isWaitingWithPacket
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 1843301440 ns (0.36%), 1843 samples
  [ 0] richards.Scheduler.lambda$createDevice$0
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008660.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1826257485 ns (0.35%), 1826 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1821156859 ns (0.35%), 1821 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1818225198 ns (0.35%), 1818 samples
  [ 0] richards.TaskControlBlock.getLink
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1811256440 ns (0.35%), 1811 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1800268017 ns (0.35%), 1800 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1775252084 ns (0.34%), 1775 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1753246821 ns (0.34%), 1753 samples
  [ 0] richards.Scheduler.release
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1727234492 ns (0.33%), 1727 samples
  [ 0] richards.Scheduler.release
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1704091649 ns (0.33%), 1704 samples
  [ 0] richards.TaskControlBlock.getIdentity
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1701098011 ns (0.33%), 1701 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1696360249 ns (0.33%), 1696 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 1691270930 ns (0.33%), 1691 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 1661279083 ns (0.32%), 1661 samples
  [ 0] richards.Scheduler.release
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1659200444 ns (0.32%), 1659 samples
  [ 0] richards.Scheduler.release
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1649235703 ns (0.32%), 1649 samples
  [ 0] richards.Packet.setLink
  [ 1] [unknown_Java]

--- 1632159350 ns (0.31%), 1632 samples
  [ 0] richards.Scheduler.markWaiting
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1616224222 ns (0.31%), 1616 samples
  [ 0] richards.Scheduler.markWaiting
  [ 1] [unknown_Java]

--- 1583258837 ns (0.31%), 1583 samples
  [ 0] richards.Scheduler.release
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1530240166 ns (0.30%), 1530 samples
  [ 0] richards.Scheduler.release
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1506201454 ns (0.29%), 1506 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1493214164 ns (0.29%), 1493 samples
  [ 0] richards.HandlerTaskDataRecord.workIn
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1373013136 ns (0.26%), 1373 samples
  [ 0] richards.TaskControlBlock.getLink
  [ 1] [unknown_Java]

--- 1363231621 ns (0.26%), 1363 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 1338180940 ns (0.26%), 1338 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1299653509 ns (0.25%), 1299 samples
  [ 0] richards.RBObject.append
  [ 1] richards.HandlerTaskDataRecord.workInAdd
  [ 2] richards.Scheduler.lambda$createHandler$1
  [ 3] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1279143330 ns (0.25%), 1279 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createWorker$3
  [ 3] richards.Scheduler$$Lambda.0x00007f8550008220.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1263144459 ns (0.24%), 1263 samples
  [ 0] richards.TaskState.isWaitingWithPacket
  [ 1] [unknown_Java]

--- 1254208701 ns (0.24%), 1254 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createHandler$1
  [ 3] richards.Scheduler$$Lambda.0x00007f8550008440.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1252146722 ns (0.24%), 1252 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1250193920 ns (0.24%), 1250 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007f8550008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1239237539 ns (0.24%), 1239 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f8550008660.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 1234166998 ns (0.24%), 1234 samples
  [ 0] richards.TaskState.isWaitingWithPacket
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
 88903920675   17.16%    88891  richards.Scheduler.schedule
 62111685407   11.99%    62103  richards.TaskControlBlock.runTask
 54894477506   10.59%    54887  richards.Scheduler.lambda$createHandler$1
 36475498504    7.04%    36470  richards.Scheduler.queuePacket
 24960282792    4.82%    24957  richards.Scheduler.lambda$createIdler$2
 22185510096    4.28%    22182  richards.TaskState.isTaskHoldingOrWaiting
 22156573659    4.28%    22153  richards.Scheduler.lambda$createWorker$3
 21968980824    4.24%    21966  richards.Scheduler.lambda$createDevice$0
 20699307240    3.99%    20696  richards.RBObject.append
 19420947332    3.75%    19418  richards.TaskControlBlock.addInputAndCheckPriority
 17180649710    3.32%    17178  richards.Scheduler.release
 14727108226    2.84%    14725  richards.Scheduler.markWaiting
 12082515949    2.33%    12081  richards.TaskState.isWaitingWithPacket
  9239433112    1.78%     9238  richards.Packet.setLink
  8407053574    1.62%     8406  richards.Scheduler.holdSelf
  6078079732    1.17%     6077  itable stub
  5200604483    1.00%     5200  richards.TaskControlBlock.getIdentity
  5187017636    1.00%     5186  richards.Scheduler.findTask
  5064830849    0.98%     5064  richards.Scheduler$$Lambda.0x00007f8550008660.apply
  5009432860    0.97%     5009  richards.TaskControlBlock.getLink
  4036629848    0.78%     4036  richards.Packet.getLink
  3780533924    0.73%     3780  richards.Scheduler$$Lambda.0x00007f8550008440.apply
  3555623075    0.69%     3555  richards.HandlerTaskDataRecord.workIn
  3172336808    0.61%     3172  richards.DeviceTaskDataRecord.setPending
  2807467078    0.54%     2807  richards.HandlerTaskDataRecord.deviceIn
  2635561325    0.51%     2635  richards.TaskControlBlock.getPriority
  2540342260    0.49%     2540  richards.HandlerTaskDataRecord.deviceInAdd
  2426398546    0.47%     2426  richards.Scheduler$$Lambda.0x00007f8550008000.apply
  2346236754    0.45%     2346  richards.DeviceTaskDataRecord.getPending
  2258391444    0.44%     2258  richards.TaskState.setTaskWaiting
  2188376197    0.42%     2188  richards.WorkerTaskDataRecord.getCount
  1964320880    0.38%     1964  richards.Packet.setIdentity
  1889302908    0.36%     1889  richards.Scheduler$$Lambda.0x00007f8550008220.apply
  1801921563    0.35%     1802  richards.Packet.getIdentity
  1708242278    0.33%     1708  richards.IdleTaskDataRecord.getCount
  1705252579    0.33%     1705  richards.TaskState.setTaskHolding
  1678207140    0.32%     1678  richards.Packet.setDatum
  1676274790    0.32%     1676  richards.Packet.getDatum
  1586169157    0.31%     1586  richards.IdleTaskDataRecord.getControl
  1472231143    0.28%     1472  richards.Packet.getData
  1284088025    0.25%     1284  richards.TaskState.setPacketPending
  1185228876    0.23%     1185  richards.TaskState.running
  1098170991    0.21%     1098  richards.Packet.getKind
   958097999    0.18%      958  richards.IdleTaskDataRecord.setCount
   868149421    0.17%      868  richards.TaskState.packetPending
   816138870    0.16%      816  richards.WorkerTaskDataRecord.setCount
   758106205    0.15%      758  richards.IdleTaskDataRecord.setControl
   576077399    0.11%      576  richards.HandlerTaskDataRecord.workInAdd
   335078522    0.06%      335  richards.WorkerTaskDataRecord.getDestination
   203880909    0.04%      204  __ZN41com_002eoracle_002esvm_002ecore_002ecode_002eIsolateEnterStub74TruffleToLibGraalEntryPoints__validateCompilerOption__Ujs0fEGwUTHHbobHrcnio9EJ32org_002egraalvm_002ejniutils_002eJNI_0024JString31org_002egraalvm_002ejniutils_002eJNI_0024JNIEnv31org_002egraalvm_002ejniutils_002eJNI_0024JClasslS0__S0__
   186017260    0.04%      186  richards.WorkerTaskDataRecord.setDestination
    97340966    0.02%       95  _raw_spin_unlock_irqrestore_[k]
    23999839    0.00%       24  richards.TaskControlBlock.<init>
    19070396    0.00%       19  clear_page_rep_[k]
    18028858    0.00%       18  Interpreter
    16050665    0.00%       16  do_user_addr_fault_[k]
    16020076    0.00%       16  zap_pte_range_[k]
    16002128    0.00%       16  richards.RBObject.<init>
    15120644    0.00%       14  __futex_abstimed_wait_common
    12831102    0.00%       12  [vdso]
    12095534    0.00%       11  clock_gettime@GLIBC_2.2.5
    10999644    0.00%       11  richards.Scheduler.createTask
    10002274    0.00%       10  Benchmark.innerBenchmarkLoop
     9999864    0.00%       10  /home/hburchell/Repos/graal-dev/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
     9004744    0.00%        9  java.lang.invoke.DirectMethodHandle.allocateInstance
     8998994    0.00%        9  richards.Scheduler.start
     8045552    0.00%        8  next_uptodate_page_[k]
     7736543    0.00%        7  StatSamplerTask::task
     7011851    0.00%        7  __handle_mm_fault_[k]
     6369252    0.00%        6  pthread_cond_timedwait@@GLIBC_2.3.2
     5396131    0.00%        5  Monitor::wait_without_safepoint_check
     5330563    0.00%        5  futex_wait_setup_[k]
     5054020    0.00%        5  G1ParScanThreadState::trim_queue_to_threshold
     5053672    0.00%        5  __do_softirq_[k]
     5028480    0.00%        5  __rcu_read_unlock_[k]
     5026091    0.00%        5  do_anonymous_page_[k]
     5004163    0.00%        5  richards.Scheduler.createPacket
     5000862    0.00%        5  java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
     5000641    0.00%        5  richards.Scheduler.createIdler
     4994912    0.00%        5  __ZN41com_002eoracle_002esvm_002ecore_002ecode_002eIsolateEnterStub65CEntryPointNativeFunctions__tearDownIsolate__ke4IYWkkawAn2nvyM2ZSW5EJi37org_002egraalvm_002enativeimage_002eIsolateThread
     4993421    0.00%        5  java.util.Arrays.fill
     4395193    0.00%        4  __x64_sys_futex_[k]
     4358380    0.00%        4  get_timespec64_[k]
     4271170    0.00%        4  __tls_get_addr
     4036751    0.00%        4  charge_memcg_[k]
     4036120    0.00%        4  __memmove_avx_unaligned_erms
     4032100    0.00%        4  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>
     4025150    0.00%        4  richards.Scheduler.<init>
     4003440    0.00%        4  richards.Scheduler$$Lambda.0x00007f8550008000.<init>
     4001321    0.00%        4  richards.Packet.<init>
     3356030    0.00%        3  futex_wait_queue_[k]
     3317350    0.00%        3  futex_setup_timer_[k]
     3293721    0.00%        3  do_syscall_64_[k]
     3284350    0.00%        3  PerfLongVariant::sample
     3277121    0.00%        3  PeriodicTask::real_time_tick
     3270360    0.00%        3  VMError::is_error_reported
     3251271    0.00%        3  syscall_enter_from_user_mode_[k]
     3250350    0.00%        3  do_futex_[k]
     3243580    0.00%        3  __get_user_nocheck_4_[k]
     3214743    0.00%        3  __put_user_8_[k]
     3194562    0.00%        3  copy_user_generic_string_[k]
     3160770    0.00%        3  srso_safe_ret_[k]
     3105061    0.00%        3  futex_wake_[k]
     3029281    0.00%        3  _raw_spin_unlock_irq_[k]
     3017090    0.00%        3  lock_page_memcg_[k]
     3016601    0.00%        3  get_mem_cgroup_from_mm_[k]
     3007600    0.00%        3  java.lang.System$2.currentCarrierThread
     3003440    0.00%        3  _invokeBasic
     3002971    0.00%        3  java.lang.Object.<init>
     3002720    0.00%        3  java.nio.ByteBuffer.arrayOffset
     3001321    0.00%        3  richards.TaskState.createWaitingWithPacket
     3000750    0.00%        3  richards.Scheduler.createDevice
     2995470    0.00%        3  Run.measure
     2242731    0.00%        2  futex_q_lock_[k]
     2209321    0.00%        2  WatcherThread::sleep
     2162480    0.00%        2  futex_get_value_locked_[k]
     2154690    0.00%        2  get_futex_key_[k]
     2150120    0.00%        2  ConcurrentGCThread::should_terminate
     2063452    0.00%        2  find_vma_[k]
     2029220    0.00%        2  __x2apic_send_IPI_dest_[k]
     2020510    0.00%        2  handle_mm_fault_[k]
     2017760    0.00%        2  prepare_alloc_pages.constprop.0_[k]
     2013630    0.00%        2  get_page_from_freelist_[k]
     2013360    0.00%        2  do_set_pte_[k]
     2012770    0.00%        2  rmqueue_[k]
     2011030    0.00%        2  __mod_memcg_lruvec_state_[k]
     2010421    0.00%        2  page_add_new_anon_rmap_[k]
     2010011    0.00%        2  __rcu_read_lock_[k]
     2007211    0.00%        2  smp_call_function_many_cond_[k]
     2006560    0.00%        2  kthread_blkcg_[k]
     2006550    0.00%        2  __mod_lruvec_page_state_[k]
     2006021    0.00%        2  java.io.FileOutputStream.writeBytes
     2005740    0.00%        2  jni_GetArrayLength
     2005350    0.00%        2  java.io.FileOutputStream.write
     2004781    0.00%        2  richards.HandlerTaskDataRecord.<init>
     2004640    0.00%        2  jdk.internal.misc.Blocker.begin
     2004640    0.00%        2  sun.nio.cs.StreamEncoder.implWrite
     2004281    0.00%        2  java.lang.Long.getChars
     2003831    0.00%        2  JVMFlagLookup::find
     2003721    0.00%        2  java.io.BufferedOutputStream.flushBuffer
     2003190    0.00%        2  I2C/C2I adapters(0xb)
     2003152    0.00%        2  java.lang.String.getChars
     2001970    0.00%        2  MemAllocator::mem_allocate_inside_tlab_slow
     2001791    0.00%        2  java.lang.invoke.LambdaForm$MH.0x00007f855000f800.invoke
     2001561    0.00%        2  Richards.benchmark
     2001350    0.00%        2  java.lang.StringConcatHelper.mix
     2001340    0.00%        2  __memset_avx2_unaligned_erms
     2001040    0.00%        2  __next_zones_zonelist_[k]
     2000991    0.00%        2  richards.IdleTaskDataRecord.<init>
     2000951    0.00%        2  java.lang.invoke.Invokers$Holder.linkToTargetMethod
     2000801    0.00%        2  java.lang.invoke.LambdaForm$MH.0x00007f855000fc00.linkToTargetMethod
     2000750    0.00%        2  JVMCIEnv::put_object_at
     2000710    0.00%        2  jdk.internal.misc.Unsafe.allocateInstance
     2000601    0.00%        2  vma_alloc_folio_[k]
     2000460    0.00%        2  richards.TaskState.createWaiting
     2000160    0.00%        2  richards.Scheduler.createHandler
     2000040    0.00%        2  richards.TaskState.isTaskWaiting
     1999910    0.00%        2  java.lang.invoke.MethodHandle.invokeBasic
     1999700    0.00%        2  InlineCacheBuffer
     1999651    0.00%        2  _IO_default_xsputn
     1999111    0.00%        2  richards.Scheduler.createWorker
     1998931    0.00%        2  richards.TaskState.<init>
     1996170    0.00%        2  java.io.PrintStream.implWriteln
     1995531    0.00%        2  JVMCIEnv::create_string
     1994260    0.00%        2  stringStream::write
     1988731    0.00%        2  readConfiguration0
     1987891    0.00%        2  HandleMark::initialize
     1978221    0.00%        2  mem_cgroup_from_task_[k]
     1959562    0.00%        2  richards.Scheduler$$Lambda.0x00007f8550008220.<init>
     1193950    0.00%        1  sched_submit_work_[k]
     1159350    0.00%        1  __hrtimer_init_[k]
     1119720    0.00%        1  ktime_get_coarse_real_ts64_[k]
     1114420    0.00%        1  __pthread_mutex_cond_lock
     1104480    0.00%        1  futex_wait_[k]
     1103031    0.00%        1  __lll_lock_wake
     1101540    0.00%        1  xfs_buf_offset?[xfs]_[k]
     1099250    0.00%        1  pthread_mutex_lock@@GLIBC_2.2.5
     1096331    0.00%        1  ChunkPoolCleaner::task
     1095271    0.00%        1  __schedule_[k]
     1093360    0.00%        1  __GI___pthread_mutex_unlock_usercnt
     1091850    0.00%        1  finish_task_switch.isra.0_[k]
     1091700    0.00%        1  Mutex::lock_without_safepoint_check
     1089360    0.00%        1  __GI___pthread_disable_asynccancel
     1087330    0.00%        1  Thread::is_Java_thread
     1081390    0.00%        1  rseq_update_cpu_id_[k]
     1079500    0.00%        1  plist_add_[k]
     1073760    0.00%        1  rseq_get_rseq_cs_[k]
     1070962    0.00%        1  __condvar_dec_grefs
     1070321    0.00%        1  __getrusage
     1066280    0.00%        1  syscall_trace_enter.constprop.0_[k]
     1054601    0.00%        1  _copy_from_user_[k]
     1053301    0.00%        1  VMThread::wait_for_operation
     1046261    0.00%        1  java.util.concurrent.locks.ReentrantLock$Sync.tryRelease
     1045580    0.00%        1  G1PeriodicGCTask::execute
     1028380    0.00%        1  sd_done?[sd_mod]_[k]
     1022181    0.00%        1  java.util.concurrent.ConcurrentHashMap$Node.<init>
     1019390    0.00%        1  unlock_page_memcg_[k]
     1018560    0.00%        1  __vfprintf_internal
     1018240    0.00%        1  LinkResolver::resolve_field_access
     1015220    0.00%        1  InstanceKlass::find_method_index
