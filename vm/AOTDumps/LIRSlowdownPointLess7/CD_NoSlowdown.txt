--- Execution profile ---
Total samples       : 101025
GC_active           : 2 (0.00%)
unknown_Java        : 970 (0.96%)
not_walkable_Java   : 69 (0.07%)

--- 3994818670 ns (3.95%), 3995 samples
  [ 0] cd.RedBlackTree.forEach
  [ 1] cd.CollisionDetector.reduceCollisionSet
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 3914861184 ns (3.87%), 3914 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 3692968369 ns (3.65%), 3693 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree$Node.successor
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.reduceCollisionSet
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3575907916 ns (3.54%), 3575 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2463045597 ns (2.44%), 2464 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f000c810.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2061047459 ns (2.04%), 2062 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.RedBlackTree.findNode
  [ 2] cd.RedBlackTree.get
  [ 3] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 4] cd.CollisionDetector$$Lambda.0x00007f40f000c810.apply
  [ 5] cd.RedBlackTree.forEach
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1407452299 ns (1.39%), 1408 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f000c810.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1227360198 ns (1.21%), 1228 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f000c810.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1214291719 ns (1.20%), 1214 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1166370158 ns (1.15%), 1166 samples
  [ 0] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 1] som.Vector.forEach
  [ 2] cd.CollisionDetector.reduceCollisionSet
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 1029146776 ns (1.02%), 1029 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1004365877 ns (0.99%), 1004 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 842258798 ns (0.83%), 842 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 833115162 ns (0.82%), 833 samples
  [ 0] cd.Vector2D.compareTo
  [ 1] cd.RedBlackTree.treeInsert
  [ 2] cd.RedBlackTree.put
  [ 3] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 4] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 763242665 ns (0.76%), 763 samples
  [ 0] som.Vector.append
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 762661747 ns (0.75%), 763 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree$Node.successor
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 756048797 ns (0.75%), 756 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.CallSign.compareTo
  [ 2] cd.RedBlackTree.treeInsert
  [ 3] cd.RedBlackTree.put
  [ 4] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 5] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 742111711 ns (0.73%), 742 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 721245703 ns (0.71%), 721 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 709297539 ns (0.70%), 709 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 682166629 ns (0.67%), 682 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 644799097 ns (0.64%), 645 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 575811767 ns (0.57%), 576 samples
  [ 0] cd.RedBlackTree.get
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 2] cd.CollisionDetector$$Lambda.0x00007f40f000c810.apply
  [ 3] cd.RedBlackTree.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 541163627 ns (0.54%), 541 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 538884042 ns (0.53%), 539 samples
  [ 0] cd.CollisionDetector.lambda$reduceCollisionSet$5
  [ 1] cd.CollisionDetector$$Lambda.0x00007f40f000ce70.apply
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.reduceCollisionSet
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 529169257 ns (0.52%), 529 samples
  [ 0] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 1] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 2] som.Vector.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 519183076 ns (0.51%), 519 samples
  [ 0] cd.Vector2D.compareTo
  [ 1] cd.RedBlackTree.treeInsert
  [ 2] cd.RedBlackTree.put
  [ 3] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 4] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 515699655 ns (0.51%), 516 samples
  [ 0] cd.RedBlackTree.forEach
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 486181717 ns (0.48%), 486 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 482231376 ns (0.48%), 482 samples
  [ 0] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 1] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 2] som.Vector.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 478170846 ns (0.47%), 478 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.findNode
  [ 4] cd.RedBlackTree.get
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 467116171 ns (0.46%), 467 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 465147095 ns (0.46%), 465 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.CallSign.compareTo
  [ 2] cd.RedBlackTree.treeInsert
  [ 3] cd.RedBlackTree.put
  [ 4] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 5] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 447085631 ns (0.44%), 447 samples
  [ 0] itable stub
  [ 1] som.Vector.forEach
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 433142294 ns (0.43%), 433 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 424100064 ns (0.42%), 424 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 387152302 ns (0.38%), 387 samples
  [ 0] cd.CollisionDetector.recurse
  [ 1] [unknown_Java]

--- 383817861 ns (0.38%), 384 samples
  [ 0] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 1] cd.CollisionDetector$$Lambda.0x00007f40f000c810.apply
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 383161769 ns (0.38%), 383 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 375889818 ns (0.37%), 376 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 360099709 ns (0.36%), 360 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 342999267 ns (0.34%), 343 samples
  [ 0] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 1] som.Vector.forEach
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 320128925 ns (0.32%), 320 samples
  [ 0] cd.CollisionDetector.lambda$handleNewFrame$3
  [ 1] cd.CollisionDetector$$Lambda.0x00007f40f000d090.apply
  [ 2] som.Vector.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 305174061 ns (0.30%), 305 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 303061625 ns (0.30%), 303 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.findNode
  [ 4] cd.RedBlackTree.get
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 299090760 ns (0.30%), 299 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.treeInsert
  [ 4] cd.RedBlackTree.put
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 288131018 ns (0.29%), 288 samples
  [ 0] cd.RedBlackTree.leftRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 286061509 ns (0.28%), 286 samples
  [ 0] som.Vector.append
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 284037025 ns (0.28%), 284 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 280016699 ns (0.28%), 280 samples
  [ 0] som.Vector.at
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$3
  [ 2] cd.CollisionDetector$$Lambda.0x00007f40f000d090.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 274993791 ns (0.27%), 275 samples
  [ 0] som.Vector.append
  [ 1] cd.Simulator.simulate
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 270030131 ns (0.27%), 270 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 270023816 ns (0.27%), 270 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 250060047 ns (0.25%), 250 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 243176937 ns (0.24%), 243 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 3] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 4] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 243027769 ns (0.24%), 243 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 240039604 ns (0.24%), 240 samples
  [ 0] cd.RedBlackTree.put
  [ 1] [unknown_Java]

--- 238985066 ns (0.24%), 239 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 234095441 ns (0.23%), 234 samples
  [ 0] cd.CollisionDetector.voxelHash
  [ 1] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 2] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.reduceCollisionSet
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 231047842 ns (0.23%), 231 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 3] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 4] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 229957844 ns (0.23%), 230 samples
  [ 0] cd.RedBlackTree.get
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 2] cd.CollisionDetector$$Lambda.0x00007f40f000c810.apply
  [ 3] cd.RedBlackTree.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 227146075 ns (0.22%), 227 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 224009345 ns (0.22%), 224 samples
  [ 0] cd.RedBlackTree.leftRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 223134350 ns (0.22%), 223 samples
  [ 0] som.Vector.append
  [ 1] cd.Simulator.simulate
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 223123993 ns (0.22%), 223 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 3] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 4] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 221003819 ns (0.22%), 221 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 218981185 ns (0.22%), 219 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.treeInsert
  [ 4] cd.RedBlackTree.put
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 212055588 ns (0.21%), 212 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 208099598 ns (0.21%), 208 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 207015211 ns (0.20%), 207 samples
  [ 0] cd.RedBlackTree.leftRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 206975704 ns (0.20%), 207 samples
  [ 0] cd.RedBlackTree.leftRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 203100749 ns (0.20%), 203 samples
  [ 0] cd.CollisionDetector.putIntoMap
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 3] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 4] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 200918977 ns (0.20%), 201 samples
  [ 0] cd.RedBlackTree$Node.successor
  [ 1] cd.RedBlackTree.forEach
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 199897117 ns (0.20%), 200 samples
  [ 0] cd.RedBlackTree.forEach
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 182070599 ns (0.18%), 182 samples
  [ 0] cd.Vector2D.compareTo
  [ 1] cd.RedBlackTree.findNode
  [ 2] cd.RedBlackTree.get
  [ 3] cd.CollisionDetector.putIntoMap
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 181038215 ns (0.18%), 181 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 179091697 ns (0.18%), 179 samples
  [ 0] cd.CollisionDetector.voxelHash
  [ 1] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 2] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.reduceCollisionSet
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 175080860 ns (0.17%), 175 samples
  [ 0] cd.RedBlackTree.leftRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 168038432 ns (0.17%), 168 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 160626391 ns (0.16%), 157 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold
  [ 1] G1ParScanThreadState::steal_and_trim_queue
  [ 2] G1ParEvacuateFollowersClosure::do_void
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects
  [ 4] G1EvacuateRegionsBaseTask::work
  [ 5] WorkerThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] start_thread

--- 153118026 ns (0.15%), 153 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.recurse
  [ 6] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 7] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 8] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 9] som.Vector.forEach
  [10] cd.CollisionDetector.reduceCollisionSet
  [11] cd.CollisionDetector.handleNewFrame
  [12] CD.benchmark
  [13] CD.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 152046790 ns (0.15%), 152 samples
  [ 0] cd.Motion.findIntersection
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$3
  [ 2] cd.CollisionDetector$$Lambda.0x00007f40f000d090.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 149881056 ns (0.15%), 150 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree$Node.successor
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 149121477 ns (0.15%), 149 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 149032407 ns (0.15%), 149 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.findNode
  [ 4] cd.RedBlackTree.get
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.recurse
  [ 8] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 9] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [10] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [11] som.Vector.forEach
  [12] cd.CollisionDetector.reduceCollisionSet
  [13] cd.CollisionDetector.handleNewFrame
  [14] CD.benchmark
  [15] CD.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 147073693 ns (0.15%), 147 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 145918828 ns (0.14%), 146 samples
  [ 0] cd.RedBlackTree$Node.successor
  [ 1] cd.RedBlackTree.forEach
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 145112941 ns (0.14%), 145 samples
  [ 0] cd.CollisionDetector.voxelHash
  [ 1] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 2] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.reduceCollisionSet
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 144995978 ns (0.14%), 145 samples
  [ 0] som.Vector.append
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 144054243 ns (0.14%), 144 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.recurse
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 141081681 ns (0.14%), 141 samples
  [ 0] itable stub
  [ 1] som.Vector.forEach
  [ 2] cd.CollisionDetector.reduceCollisionSet
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 141027738 ns (0.14%), 141 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 138087672 ns (0.14%), 138 samples
  [ 0] cd.Vector2D.compareTo
  [ 1] cd.RedBlackTree.treeInsert
  [ 2] cd.RedBlackTree.put
  [ 3] cd.CollisionDetector.putIntoMap
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 137108443 ns (0.14%), 137 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] java.util.Arrays.copyOf
  [ 2] som.Vector.append
  [ 3] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 4] cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 137013335 ns (0.14%), 137 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 136035745 ns (0.13%), 136 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.findNode
  [ 4] cd.RedBlackTree.get
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.recurse
  [ 8] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 9] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [10] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [11] som.Vector.forEach
  [12] cd.CollisionDetector.reduceCollisionSet
  [13] cd.CollisionDetector.handleNewFrame
  [14] CD.benchmark
  [15] CD.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 135069104 ns (0.13%), 135 samples
  [ 0] cd.Motion.findIntersection
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$3
  [ 2] cd.CollisionDetector$$Lambda.0x00007f40f000d090.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 133981384 ns (0.13%), 134 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 133088986 ns (0.13%), 133 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.recurse
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 132976036 ns (0.13%), 133 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 3] cd.CollisionDetector$$Lambda.0x00007f40f000c810.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
 20273755160   20.06%    20270  cd.RedBlackTree.treeInsert
 14510912702   14.36%    14506  cd.CollisionDetector.isInVoxel
 10415348772   10.31%    10412  cd.RedBlackTree.put
  9502345792    9.40%     9503  cd.RedBlackTree.findNode
  4801578073    4.75%     4802  cd.RedBlackTree.treeMinimum
  4781446119    4.73%     4782  cd.RedBlackTree.forEach
  4758362755    4.71%     4757  cd.Vector2D.compareNumbers
  3968307533    3.93%     3969  cd.CallSign.compareTo
  3221823927    3.19%     3221  cd.Vector2D.compareTo
  2635822551    2.61%     2635  cd.RedBlackTree.leftRotate
  2511690417    2.49%     2511  som.Vector.append
  1691624388    1.67%     1691  som.Vector.<init>
  1640558296    1.62%     1640  cd.CollisionDetector.recurse
  1395512262    1.38%     1395  cd.CollisionDetector.lambda$handleNewFrame$0
  1256406193    1.24%     1256  cd.CollisionDetector$$Lambda.0x00007f40f000cc50.apply
   980857213    0.97%      981  cd.RedBlackTree.get
   978295063    0.97%      978  cd.Vector2D.plus
   940267207    0.93%      940  cd.CollisionDetector.putIntoMap
   901513800    0.89%      901  cd.CollisionDetector.voxelHash
   845249708    0.84%      845  cd.Vector2D.minus
   823581524    0.81%      824  cd.RedBlackTree$Node.successor
   755057153    0.75%      755  __ZN41com_002eoracle_002esvm_002ecore_002ecode_002eIsolateEnterStub74TruffleToLibGraalEntryPoints__validateCompilerOption__Ujs0fEGwUTHHbobHrcnio9EJ32org_002egraalvm_002ejniutils_002eJNI_0024JString31org_002egraalvm_002ejniutils_002eJNI_0024JNIEnv31org_002egraalvm_002ejniutils_002eJNI_0024JClasslS0__S0__
   615162512    0.61%      615  itable stub
   608164033    0.60%      608  cd.Motion.findIntersection
   560854980    0.55%      561  cd.CollisionDetector.lambda$reduceCollisionSet$5
   539185445    0.53%      539  cd.Simulator.simulate
   511993995    0.51%      512  cd.CollisionDetector$$Lambda.0x00007f40f0007820.apply
   475215361    0.47%      475  cd.CollisionDetector.lambda$handleNewFrame$3
   395815934    0.39%      396  cd.CollisionDetector.lambda$handleNewFrame$1
   380133482    0.38%      380  cd.RedBlackTree.rightRotate
   353118241    0.35%      353  som.Vector.forEach
   311990838    0.31%      312  som.Vector.at
   284126477    0.28%      284  java.util.Arrays.copyOf
   232796029    0.23%      228  G1ParScanThreadState::trim_queue_to_threshold
   167029298    0.17%      167  cd.Vector3D.minus
   124925730    0.12%      125  som.Vector.size
   110022383    0.11%      110  cd.CollisionDetector.drawMotionOnVoxelMap
   109000891    0.11%      109  oop_disjoint_arraycopy
   107688890    0.11%      105  _raw_spin_unlock_irqrestore_[k]
   106997293    0.11%      107  cd.CollisionDetector$$Lambda.0x00007f40f000d090.apply
    87130437    0.09%       86  __memset_avx2_unaligned_erms
    63027529    0.06%       63  cd.Vector3D.dot
    53716697    0.05%       53  SpinPause
    53386477    0.05%       52  HeapRegionManager::par_iterate
    39279189    0.04%       39  clear_page_rep_[k]
    33037083    0.03%       33  G1BarrierSetRuntime::write_ref_array_post_entry
    32011538    0.03%       32  java.lang.Object.getClass
    31703092    0.03%       31  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>
    29938112    0.03%       29  [vdso]
    25032849    0.02%       25  Interpreter
    20005519    0.02%       20  java.lang.Math.sqrt
    19442343    0.02%       19  G1ParScanThreadState::steal_and_trim_queue
    17004667    0.02%       17  cd.Vector3D.times
    16333035    0.02%       16  void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>
    16007655    0.02%       16  cd.CollisionDetector.handleNewFrame
    15004252    0.01%       15  jdk.internal.misc.Unsafe.allocateInstance
    13004884    0.01%       13  G1BarrierSet::invalidate
    12242581    0.01%       12  FreeListAllocator::reset
    12005885    0.01%       12  CD.benchmark
    11999215    0.01%       12  /home/hburchell/Repos/graal-dev/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
    11998528    0.01%       12  cd.CollisionDetector$$Lambda.0x00007f40f000c810.apply
    11628135    0.01%       11  __futex_abstimed_wait_common
    10269992    0.01%       10  futex_wake_[k]
     9231011    0.01%        9  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region
     9197063    0.01%        9  _int_malloc
     8193032    0.01%        8  __tls_get_addr
     8162744    0.01%        8  FreeCSetClosure::do_heap_region
     8075161    0.01%        8  G1FromCardCache::clear
     8028811    0.01%        8  HeapRegionManager::allocate_free_region
     8020714    0.01%        8  java.lang.System.arraycopy
     8017830    0.01%        8  JVMCIRuntime::new_instance_common
     8006071    0.01%        8  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<598116ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 598116ul>::oop_access_barrier
     8004801    0.01%        8  cd.CollisionDetector.reduceCollisionSet
     8004451    0.01%        8  Stub<AMD64MathStub.sin>
     7237974    0.01%        7  malloc
     7000353    0.01%        7  Stub<AMD64MathStub.cos>
     6999541    0.01%        7  MemAllocator::mem_allocate_inside_tlab_slow
     6108712    0.01%        6  __memmove_sse2_unaligned_erms
     6106230    0.01%        6  __vfprintf_internal
     6069643    0.01%        6  do_user_addr_fault_[k]
     6039172    0.01%        6  ObjArrayAllocator::initialize
     6008642    0.01%        6  java.lang.invoke.LambdaForm$MH.0x00007f40f0010800.invoke
     6006862    0.01%        6  G1MonitoringSupport::update_eden_size
     6004550    0.01%        6  _dl_update_slotinfo
     5996141    0.01%        6  zap_pte_range_[k]
     5380994    0.01%        5  clock_gettime@GLIBC_2.2.5
     5207191    0.01%        5  G1CardSet::reset_table_scanner
     5193102    0.01%        5  futex_q_lock_[k]
     5138131    0.01%        5  syscall_enter_from_user_mode_[k]
     5137032    0.01%        5  ClassLoaderDataGraph::roots_cld_do
     5125130    0.01%        5  G1ParCopyClosure<(G1Barrier)0, false>::do_oop
     5117700    0.01%        5  G1RemSet::prepare_for_scan_heap_roots
     5107191    0.01%        5  frame::oops_interpreted_do
     5104921    0.01%        5  Thread::claim_par_threads_do
     5026393    0.00%        5  next_uptodate_page_[k]
     5013732    0.00%        5  java.nio.charset.CharsetEncoder.encode
     5012351    0.00%        5  __GI___pthread_mutex_trylock
     5005331    0.00%        5  _invokeBasic
     5005063    0.00%        5  java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
     5004380    0.00%        5  G1Allocator::unsafe_max_tlab_alloc
     5004182    0.00%        5  MemAllocator::Allocation::notify_allocation_jfr_sampler
     5002901    0.00%        5  InstanceKlass::allocate_objArray
     5000453    0.00%        5  ResourceArea::rollback_to
     4142382    0.00%        4  wake_up_q_[k]
     4113860    0.00%        4  plist_add_[k]
     4091890    0.00%        4  G1CodeRootSet::clear
     4057252    0.00%        4  TruncatedSeq::add
     4018162    0.00%        4  charge_memcg_[k]
     4009761    0.00%        4  java.lang.Math.round
     4009090    0.00%        4  __ZN41com_002eoracle_002esvm_002ecore_002ecode_002eIsolateEnterStub65CEntryPointNativeFunctions__tearDownIsolate__ke4IYWkkawAn2nvyM2ZSW5EJi37org_002egraalvm_002enativeimage_002eIsolateThread
     4008791    0.00%        4  sun.nio.cs.StreamEncoder.growByteBufferIfNeeded
     4008621    0.00%        4  sun.nio.cs.UTF_8$Encoder.encodeArrayLoop
     4008280    0.00%        4  sun.nio.cs.StreamEncoder.implWrite
     4007161    0.00%        4  java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
     4006472    0.00%        4  java.io.BufferedWriter.implWrite
     4004660    0.00%        4  java.io.PrintStream.implWriteln
     4004572    0.00%        4  MemAllocator::allocate
     4003120    0.00%        4  G1CollectedHeap::fill_with_dummy_object
     4002521    0.00%        4  G1CollectionSet::add_eden_region
     4002492    0.00%        4  ObjAllocator::initialize
     3997441    0.00%        4  __rcu_read_unlock_[k]
     3995331    0.00%        4  java.io.FileOutputStream.write
     3965941    0.00%        4  uncharge_folio_[k]
     3268140    0.00%        3  PerfLongVariant::sample
     3210921    0.00%        3  do_futex_[k]
     3183540    0.00%        3  srso_safe_ret_[k]
     3125270    0.00%        3  JavaThread::oops_do_frames
     3122932    0.00%        3  do_syscall_64_[k]
     3109351    0.00%        3  G1RemSet::scan_heap_roots
     3105980    0.00%        3  sched_submit_work_[k]
     3098431    0.00%        3  HeapRegionClaimer::claim_region
     3096450    0.00%        3  JNIHandleBlock::oops_do
     3093400    0.00%        3  CompositeElapsedCounterSource::seconds
     3085200    0.00%        3  G1ScanCollectionSetRegionClosure::do_heap_region
     3084020    0.00%        3  G1ParScanThreadState::copy_to_survivor_space
     3072871    0.00%        3  PosixSemaphore::wait
     3061591    0.00%        3  __do_softirq_[k]
     3060032    0.00%        3  ConstantPool::name_and_type_ref_index_at
     3040762    0.00%        3  G1MonotonicArena::num_segments
     3037200    0.00%        3  _int_free
     3032250    0.00%        3  __strchrnul_avx2
     3027001    0.00%        3  jdk.internal.misc.Blocker.begin
     3021691    0.00%        3  __GI___pthread_mutex_unlock_usercnt
     3016041    0.00%        3  HeapRegionRemSet::clear_fcc
     3005862    0.00%        3  java.lang.invoke.LambdaForm$MH.0x00007f40f0010c00.linkToTargetMethod
     3004802    0.00%        3  java.io.PrintStream.println
     3004470    0.00%        3  I2C/C2I adapters(0xbb)
     3004281    0.00%        3  Run.printResult
     3004240    0.00%        3  java.lang.invoke.LambdaForm$MH.0x00007f40f000bc00.invoke
     3004181    0.00%        3  java.lang.StringConcatHelper.newArray
     3002641    0.00%        3  java.lang.invoke.Invokers$Holder.linkToTargetMethod
     3002150    0.00%        3  G1RemSetTrackingPolicy::update_at_allocate
     3002032    0.00%        3  G1NUMA::index_of_current_thread
     3001511    0.00%        3  update_get_addr
     3001192    0.00%        3  I2C/C2I adapters(0xb)
     2992590    0.00%        3  java.lang.String.valueOf
     2141582    0.00%        2  futex_wait_setup_[k]
     2092902    0.00%        2  __get_user_8_[k]
     2085450    0.00%        2  _raw_spin_unlock_[k]
     2083181    0.00%        2  ___pthread_cond_broadcast
     2074413    0.00%        2  pthread_cond_timedwait@@GLIBC_2.3.2
     2073281    0.00%        2  G1RemSet::prepare_region_for_scan
     2069330    0.00%        2  frame::oops_code_blob_do
     2069210    0.00%        2  G1CardSetMemoryManager::memory_stats
     2065831    0.00%        2  OopStorage::BasicParState::claim_next_segment
     2064861    0.00%        2  OopMapCache::lookup
     2062560    0.00%        2  WorkerThread::run
     2059822    0.00%        2  HeapRegionRemSet::code_roots_do
     2056750    0.00%        2  os::elapsed_counter
     2056502    0.00%        2  Method::bcp_from
     2055820    0.00%        2  void QuickSort::inner_sort<true, unsigned int, int (*)(unsigned int, unsigned int)>
     2055530    0.00%        2  G1GCParPhaseTimesTracker::G1GCParPhaseTimesTracker
     2054470    0.00%        2  native_queued_spin_lock_slowpath_[k]
     2053970    0.00%        2  wake_q_add_safe_[k]
     2052761    0.00%        2  G1CollectedHeap::prepare_for_mutator_after_young_collection
     2052201    0.00%        2  NamedThread::is_Named_thread
     2051361    0.00%        2  G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region
     2050170    0.00%        2  PtrQueue::PtrQueue
     2045343    0.00%        2  __GI___lll_lock_wait
     2044322    0.00%        2  ThreadsListHandle::ThreadsListHandle
     2044241    0.00%        2  G1GCParPhaseTimesTracker::~G1GCParPhaseTimesTracker
     2043390    0.00%        2  __list_del_entry_valid_[k]
     2041311    0.00%        2  G1Allocator::survivor_attempt_allocation
     2040340    0.00%        2  LinuxWaitBarrier::arm
     2039800    0.00%        2  os::malloc
     2039110    0.00%        2  G1MonotonicArena::drop_all
     2034362    0.00%        2  SafepointSynchronize::disarm_safepoint
     2032282    0.00%        2  __GI___pthread_enable_asynccancel
     2030390    0.00%        2  G1ParScanThreadStateSet::flush_stats
     2030061    0.00%        2  futex_wake_mark_[k]
     2028871    0.00%        2  Mutex::lock_without_safepoint_check
     2028341    0.00%        2  ImmutableOopMapSet::find_map_at_offset
     2027221    0.00%        2  G1RootProcessor::process_vm_roots
     2018240    0.00%        2  G1SurvivorRegions::length
     2017182    0.00%        2  pipe_write_[k]
     2017181    0.00%        2  smp_call_function_many_cond_[k]
     2012860    0.00%        2  Klass::check_array_allocation_length
     2011910    0.00%        2  InstanceKlass::allocate_instance
     2007051    0.00%        2  c2v_getBytecode
     2006441    0.00%        2  __handle_mm_fault_[k]
