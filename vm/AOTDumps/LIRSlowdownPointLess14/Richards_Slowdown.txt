--- Execution profile ---
Total samples       : 772230
unknown_Java        : 79292 (10.27%)
not_walkable_Java   : 16 (0.00%)

--- 32909757838 ns (4.26%), 32902 samples
  [ 0] itable stub
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 29859777396 ns (3.87%), 29855 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 17267318867 ns (2.24%), 17265 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 13500867896 ns (1.75%), 13499 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 12407970776 ns (1.61%), 12406 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 12140401253 ns (1.57%), 12139 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 11812838788 ns (1.53%), 11810 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 11731858245 ns (1.52%), 11730 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 11442752242 ns (1.48%), 11441 samples
  [ 0] richards.TaskState.isWaitingWithPacket
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 9981563779 ns (1.29%), 9980 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 9326490326 ns (1.21%), 9325 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] [unknown_Java]

--- 9131390198 ns (1.18%), 9130 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 8983329760 ns (1.16%), 8982 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 8874249763 ns (1.15%), 8873 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 8008255930 ns (1.04%), 8007 samples
  [ 0] richards.Packet.setLink
  [ 1] [unknown_Java]

--- 8004320484 ns (1.04%), 8003 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 7749008429 ns (1.00%), 7748 samples
  [ 0] richards.TaskControlBlock.getIdentity
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 7503273395 ns (0.97%), 7502 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 7353138940 ns (0.95%), 7352 samples
  [ 0] richards.Scheduler.lambda$createDevice$0
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 7109982646 ns (0.92%), 7109 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 6922140095 ns (0.90%), 6921 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 6827139402 ns (0.88%), 6826 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 6729798428 ns (0.87%), 6729 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 6309850200 ns (0.82%), 6309 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 6120734727 ns (0.79%), 6120 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 5792715880 ns (0.75%), 5792 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 5630890025 ns (0.73%), 5630 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 5394816297 ns (0.70%), 5394 samples
  [ 0] richards.Scheduler.lambda$createDevice$0
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 4921693775 ns (0.64%), 4921 samples
  [ 0] richards.TaskControlBlock.getIdentity
  [ 1] [unknown_Java]

--- 4826682012 ns (0.62%), 4826 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 4660565344 ns (0.60%), 4660 samples
  [ 0] richards.RBObject.append
  [ 1] richards.TaskControlBlock.addInputAndCheckPriority
  [ 2] richards.Scheduler.queuePacket
  [ 3] richards.Scheduler.lambda$createHandler$1
  [ 4] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 5] richards.TaskControlBlock.runTask
  [ 6] richards.Scheduler.schedule
  [ 7] richards.Scheduler.start
  [ 8] Richards.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 4603509864 ns (0.60%), 4603 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 4546758340 ns (0.59%), 4546 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createDevice$0
  [ 3] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 4396609821 ns (0.57%), 4396 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 4373492633 ns (0.57%), 4373 samples
  [ 0] richards.Scheduler.lambda$createDevice$0
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 4141703739 ns (0.54%), 4141 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 4114286666 ns (0.53%), 4114 samples
  [ 0] richards.Packet.getLink
  [ 1] [unknown_Java]

--- 3909644882 ns (0.51%), 3909 samples
  [ 0] richards.TaskControlBlock.getLink
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 3876161117 ns (0.50%), 3875 samples
  [ 0] richards.Scheduler.lambda$createDevice$0
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3817622711 ns (0.49%), 3817 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 3722554751 ns (0.48%), 3722 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 3714446275 ns (0.48%), 3714 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3651664872 ns (0.47%), 3651 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 3614420337 ns (0.47%), 3614 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 3600546347 ns (0.47%), 3600 samples
  [ 0] richards.RBObject.append
  [ 1] richards.HandlerTaskDataRecord.deviceInAdd
  [ 2] richards.Scheduler.lambda$createHandler$1
  [ 3] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 3561532446 ns (0.46%), 3561 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 3521423420 ns (0.46%), 3521 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 3516260608 ns (0.46%), 3516 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3446729799 ns (0.45%), 3446 samples
  [ 0] richards.HandlerTaskDataRecord.deviceInAdd
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 3139422361 ns (0.41%), 3139 samples
  [ 0] richards.DeviceTaskDataRecord.setPending
  [ 1] [unknown_Java]

--- 3037214193 ns (0.39%), 3037 samples
  [ 0] richards.Scheduler.markWaiting
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 3023504073 ns (0.39%), 3023 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 3014555493 ns (0.39%), 3014 samples
  [ 0] richards.TaskControlBlock.getLink
  [ 1] [unknown_Java]

--- 2984234171 ns (0.39%), 2984 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2966491954 ns (0.38%), 2966 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2916494258 ns (0.38%), 2916 samples
  [ 0] richards.RBObject.append
  [ 1] richards.TaskControlBlock.addInputAndCheckPriority
  [ 2] richards.Scheduler.queuePacket
  [ 3] richards.Scheduler.lambda$createHandler$1
  [ 4] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 5] richards.TaskControlBlock.runTask
  [ 6] richards.Scheduler.schedule
  [ 7] richards.Scheduler.start
  [ 8] Richards.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 2846511958 ns (0.37%), 2846 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2768429815 ns (0.36%), 2768 samples
  [ 0] richards.Scheduler.lambda$createDevice$0
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2759257155 ns (0.36%), 2759 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 2649597832 ns (0.34%), 2649 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2648366684 ns (0.34%), 2648 samples
  [ 0] richards.Scheduler.holdSelf
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2643933021 ns (0.34%), 2644 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2633379675 ns (0.34%), 2633 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2627379436 ns (0.34%), 2627 samples
  [ 0] richards.Scheduler.holdSelf
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2587382134 ns (0.33%), 2587 samples
  [ 0] richards.Scheduler.markWaiting
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2577445255 ns (0.33%), 2577 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createHandler$1
  [ 3] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2567399058 ns (0.33%), 2567 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2474317059 ns (0.32%), 2474 samples
  [ 0] richards.Packet.getLink
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 2473330944 ns (0.32%), 2473 samples
  [ 0] richards.Packet.getDatum
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2470395863 ns (0.32%), 2470 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2416342036 ns (0.31%), 2416 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2398528266 ns (0.31%), 2398 samples
  [ 0] richards.TaskState.setTaskWaiting
  [ 1] [unknown_Java]

--- 2397324188 ns (0.31%), 2397 samples
  [ 0] richards.Scheduler.holdSelf
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2391500751 ns (0.31%), 2391 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2383352641 ns (0.31%), 2383 samples
  [ 0] richards.Scheduler.findTask
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createHandler$1
  [ 3] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2378341482 ns (0.31%), 2378 samples
  [ 0] richards.Packet.getIdentity
  [ 1] [unknown_Java]

--- 2338422728 ns (0.30%), 2338 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2324175496 ns (0.30%), 2324 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2292355674 ns (0.30%), 2292 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2268274786 ns (0.29%), 2268 samples
  [ 0] richards.Scheduler.findTask
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createDevice$0
  [ 3] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2246396621 ns (0.29%), 2246 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2224370590 ns (0.29%), 2224 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2215309524 ns (0.29%), 2215 samples
  [ 0] richards.DeviceTaskDataRecord.setPending
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2210315038 ns (0.29%), 2210 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createDevice$0
  [ 3] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2182341539 ns (0.28%), 2182 samples
  [ 0] richards.HandlerTaskDataRecord.deviceInAdd
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2180371160 ns (0.28%), 2180 samples
  [ 0] richards.DeviceTaskDataRecord.setPending
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2176422934 ns (0.28%), 2176 samples
  [ 0] richards.Scheduler.markWaiting
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2176383931 ns (0.28%), 2176 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2166281096 ns (0.28%), 2166 samples
  [ 0] richards.Scheduler.holdSelf
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2156254168 ns (0.28%), 2156 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createDevice$0
  [ 3] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2149205472 ns (0.28%), 2149 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2143437113 ns (0.28%), 2143 samples
  [ 0] richards.WorkerTaskDataRecord.getCount
  [ 1] [unknown_Java]

--- 2131174223 ns (0.28%), 2131 samples
  [ 0] richards.HandlerTaskDataRecord.workIn
  [ 1] [unknown_Java]

--- 2128334966 ns (0.28%), 2128 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2128297048 ns (0.28%), 2128 samples
  [ 0] richards.Scheduler.markWaiting
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2121179517 ns (0.27%), 2121 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] [unknown_Java]

--- 2090381516 ns (0.27%), 2090 samples
  [ 0] richards.HandlerTaskDataRecord.workIn
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2088294174 ns (0.27%), 2088 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2065363545 ns (0.27%), 2066 samples
  [ 0] richards.Packet.setLink
  [ 1] richards.RBObject.append
  [ 2] richards.TaskControlBlock.addInputAndCheckPriority
  [ 3] richards.Scheduler.queuePacket
  [ 4] richards.Scheduler.lambda$createHandler$1
  [ 5] richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  [ 6] richards.TaskControlBlock.runTask
  [ 7] richards.Scheduler.schedule
  [ 8] richards.Scheduler.start
  [ 9] Richards.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 2064302090 ns (0.27%), 2064 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007f9c40008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
114905010594   14.88%   114887  richards.Scheduler.schedule
 67193853610    8.70%    67184  richards.TaskControlBlock.runTask
 61489913038    7.96%    61481  richards.Scheduler.lambda$createHandler$1
 45004689574    5.83%    44998  richards.TaskState.isTaskHoldingOrWaiting
 43389308399    5.62%    43383  richards.Scheduler.queuePacket
 32909757838    4.26%    32902  itable stub
 29446754876    3.81%    29442  richards.Scheduler.lambda$createDevice$0
 28136969497    3.64%    28133  richards.TaskControlBlock.addInputAndCheckPriority
 24977691438    3.23%    24974  richards.Scheduler.lambda$createIdler$2
 24221569795    3.14%    24219  richards.Packet.setLink
 21713697091    2.81%    21712  richards.Scheduler.findTask
 21036043597    2.72%    21033  richards.Scheduler.lambda$createWorker$3
 20204588968    2.62%    20202  richards.RBObject.append
 19320217700    2.50%    19317  richards.TaskState.isWaitingWithPacket
 19041525492    2.47%    19039  richards.Scheduler.markWaiting
 14565314496    1.89%    14563  richards.Scheduler.release
 12936755608    1.67%    12935  richards.TaskControlBlock.getIdentity
 11627196047    1.51%    11626  richards.Packet.getLink
 11602647128    1.50%    11601  richards.Scheduler.holdSelf
  9493463170    1.23%     9492  richards.Scheduler$$Lambda.0x00007f9c40008660.apply
  9472319951    1.23%     9471  richards.DeviceTaskDataRecord.setPending
  9008574013    1.17%     9007  richards.TaskControlBlock.getLink
  7978302056    1.03%     7977  richards.Scheduler$$Lambda.0x00007f9c40008440.apply
  7815126625    1.01%     7814  richards.Packet.getIdentity
  7385282934    0.96%     7384  richards.HandlerTaskDataRecord.deviceInAdd
  7176222754    0.93%     7175  richards.TaskState.setTaskWaiting
  6315107903    0.82%     6314  richards.TaskControlBlock.getPriority
  6169942352    0.80%     6169  richards.HandlerTaskDataRecord.workIn
  5850975723    0.76%     5850  richards.TaskState.setTaskHolding
  5471050780    0.71%     5470  richards.WorkerTaskDataRecord.getCount
  5422946256    0.70%     5423  richards.HandlerTaskDataRecord.deviceIn
  5202998463    0.67%     5198  richards.TaskState.setPacketPending
  4824607722    0.62%     4824  richards.DeviceTaskDataRecord.getPending
  4775899174    0.62%     4775  richards.Packet.setDatum
  4711735323    0.61%     4711  richards.Packet.setIdentity
  4600684827    0.60%     4600  richards.IdleTaskDataRecord.getControl
  4430664380    0.57%     4430  richards.Scheduler$$Lambda.0x00007f9c40008000.apply
  3931672046    0.51%     3931  richards.Packet.getDatum
  3907569538    0.51%     3907  richards.TaskState.running
  3805653086    0.49%     3805  richards.IdleTaskDataRecord.getCount
  3343606480    0.43%     3343  richards.Packet.getKind
  3098692460    0.40%     3098  richards.Scheduler$$Lambda.0x00007f9c40008220.apply
  2557440127    0.33%     2557  richards.Packet.getData
  2347393934    0.30%     2347  richards.TaskState.packetPending
  1924938780    0.25%     1925  richards.HandlerTaskDataRecord.workInAdd
  1733313625    0.22%     1733  richards.WorkerTaskDataRecord.setCount
  1580289289    0.20%     1580  richards.IdleTaskDataRecord.setCount
  1558189913    0.20%     1558  richards.IdleTaskDataRecord.setControl
  1072210678    0.14%     1072  richards.WorkerTaskDataRecord.getDestination
   494110385    0.06%      494  richards.WorkerTaskDataRecord.setDestination
   241998285    0.03%      242  __ZN41com_002eoracle_002esvm_002ecore_002ecode_002eIsolateEnterStub74TruffleToLibGraalEntryPoints__validateCompilerOption__Ujs0fEGwUTHHbobHrcnio9EJ32org_002egraalvm_002ejniutils_002eJNI_0024JString31org_002egraalvm_002ejniutils_002eJNI_0024JNIEnv31org_002egraalvm_002ejniutils_002eJNI_0024JClasslS0__S0__
    40844835    0.01%       38  clock_gettime@GLIBC_2.2.5
    39553575    0.01%       39  _raw_spin_unlock_irqrestore_[k]
    35991586    0.00%       36  richards.TaskControlBlock.<init>
    21011416    0.00%       21  richards.Packet.<init>
    18315916    0.00%       17  clear_page_rep_[k]
    18012775    0.00%       18  richards.Scheduler.createTask
    18006373    0.00%       18  richards.Scheduler.start
    17991324    0.00%       18  richards.RBObject.<init>
    17386424    0.00%       17  __futex_abstimed_wait_common
    17243882    0.00%       11  G1ParScanThreadState::trim_queue_to_threshold
    16171822    0.00%       16  Interpreter
    16006097    0.00%       16  java.lang.invoke.DirectMethodHandle.allocateInstance
    15043082    0.00%       15  do_user_addr_fault_[k]
    14039864    0.00%       14  zap_pte_range_[k]
    12009676    0.00%       12  java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
    11924092    0.00%       11  [vdso]
    10456241    0.00%        9  PeriodicTask::real_time_tick
     9595676    0.00%        9  __tls_get_addr
     9001574    0.00%        9  jdk.internal.misc.Unsafe.allocateInstance
     8869353    0.00%        7  __lll_lock_wake
     8737492    0.00%        8  StatSamplerTask::task
     8506494    0.00%        8  richards.Scheduler.createPacket
     8042042    0.00%        7  Mutex::lock_without_safepoint_check
     8002022    0.00%        8  Benchmark.innerBenchmarkLoop
     8001871    0.00%        8  richards.TaskState.createRunning
     8000782    0.00%        8  java.util.Arrays.fill
     7993822    0.00%        8  /home/hburchell/Repos/graal-dev/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
     7442061    0.00%        7  __get_user_8_[k]
     7316493    0.00%        7  srso_safe_ret_[k]
     7004231    0.00%        7  richards.HandlerTaskDataRecord.<init>
     7001943    0.00%        7  richards.Scheduler.createWorker
     7001640    0.00%        7  richards.Scheduler.createIdler
     6594484    0.00%        6  java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
     6530721    0.00%        6  pthread_cond_timedwait@@GLIBC_2.3.2
     6428161    0.00%        6  Monitor::wait_without_safepoint_check
     6042440    0.00%        6  __memmove_avx_unaligned_erms
     5997712    0.00%        6  java.lang.Object.<init>
     5996541    0.00%        6  Richards.verifyResult
     5777001    0.00%        5  __condvar_dec_grefs
     5591041    0.00%        5  syscall_enter_from_user_mode_[k]
     5373303    0.00%        5  ___pthread_mutex_unlock
     5303142    0.00%        5  ObjectSynchronizer::is_async_deflation_needed
     5058812    0.00%        5  __do_softirq_[k]
     5018241    0.00%        5  next_uptodate_page_[k]
     5012752    0.00%        5  sun.nio.cs.UTF_8$Encoder.encodeArrayLoop
     5004192    0.00%        5  richards.Scheduler.<init>
     5001441    0.00%        5  richards.TaskState.<init>
     4392111    0.00%        4  futex_wait_[k]
     4389930    0.00%        4  WatcherThread::sleep
     4348731    0.00%        4  _copy_from_user_[k]
     4346452    0.00%        4  VMError::is_error_reported
     4335001    0.00%        4  PerfLongVariant::sample
     4334582    0.00%        4  futex_wait_setup_[k]
     4323631    0.00%        4  futex_wake_[k]
     4017840    0.00%        4  Run.measure
     4012600    0.00%        4  charge_memcg_[k]
     4012532    0.00%        4  __rcu_read_unlock_[k]
     4003781    0.00%        4  richards.Scheduler.createDevice
     4003691    0.00%        2  java.lang.invoke.LambdaForm$MH.0x00007f9c4000d400.invoke
     4003310    0.00%        4  I2C/C2I adapters(0xb)
     4001371    0.00%        4  richards.Scheduler.createHandler
     4000760    0.00%        4  Richards.benchmark
     4000710    0.00%        4  richards.IdleTaskDataRecord.<init>
     4000691    0.00%        4  java.lang.invoke.Invokers$Holder.linkToTargetMethod
     4000153    0.00%        4  richards.Scheduler$$Lambda.0x00007f9c40008440.<init>
     3424103    0.00%        3  G1MergeHeapRootsTask::work
     3361811    0.00%        3  do_syscall_64_[k]
     3322980    0.00%        3  __x64_sys_futex_[k]
     3271893    0.00%        3  futex_wait_queue_[k]
     3270700    0.00%        3  do_futex_[k]
     3265711    0.00%        3  futex_get_value_locked_[k]
     3222121    0.00%        3  VMThread::wait_for_operation
     3203891    0.00%        3  PlatformMonitor::wait
     3184832    0.00%        3  _raw_spin_unlock_[k]
     3030321    0.00%        3  do_anonymous_page_[k]
     3016481    0.00%        3  __mod_node_page_state_[k]
     3006611    0.00%        3  sun.nio.cs.StreamEncoder.growByteBufferIfNeeded
     3003692    0.00%        3  java.lang.StringConcatHelper.mix
     3003580    0.00%        3  _invokeBasic
     3002522    0.00%        3  java.lang.Long.stringSize
     3002100    0.00%        3  richards.Scheduler$$Lambda.0x00007f9c40008220.<init>
     3000771    0.00%        3  richards.TaskState.createWaiting
     3000532    0.00%        3  richards.Scheduler$$Lambda.0x00007f9c40008660.<init>
     3000491    0.00%        3  java.lang.Boolean.valueOf
     3000062    0.00%        3  richards.TaskState.waitingWithPacket
     2998703    0.00%        3  richards.TaskState.isTaskHolding
     2983341    0.00%        3  filemap_map_pages_[k]
     2746501    0.00%        2  java.lang.String.<init>
     2601210    0.00%        1  ClassLoaderDataGraph::roots_cld_do
     2541590    0.00%        2  java.lang.invoke.DelegatingMethodHandle$Holder.reinvoke_L
     2442671    0.00%        1  richards.TaskState.createWaitingWithPacket
     2336981    0.00%        2  WorkerThread::run
     2256910    0.00%        2  get_timespec64_[k]
     2220241    0.00%        2  get_futex_key_[k]
     2198050    0.00%        2  os::elapsed_counter
     2177691    0.00%        2  __audit_syscall_entry_[k]
     2172150    0.00%        2  __hrtimer_init_[k]
     2158620    0.00%        2  rseq_update_cpu_id_[k]
     2144662    0.00%        2  __pthread_mutex_cond_lock
     2137721    0.00%        2  InlineCacheBuffer::is_empty
     2137302    0.00%        2  os::javaTimeNanos
     2074590    0.00%        2  copy_user_generic_string_[k]
     2048671    0.00%        2  __GI___pthread_disable_asynccancel
     2042451    0.00%        2  _raw_spin_unlock_irq_[k]
     2018001    0.00%        2  nft_do_chain?[nf_tables]_[k]
     2015540    0.00%        2  smp_call_function_many_cond_[k]
     2014711    0.00%        2  prepare_alloc_pages.constprop.0_[k]
     2010541    0.00%        2  _find_first_bit_[k]
     2008922    0.00%        2  find_vma_[k]
     2008901    0.00%        2  do_set_pte_[k]
     2007391    0.00%        2  jdk.internal.org.objectweb.asm.ByteVector.putUTF8
     2007061    0.00%        2  java.nio.Buffer.<init>
     2005441    0.00%        2  java.lang.Math.min
     2005182    0.00%        2  ResourceArea::rollback_to
     2004932    0.00%        2  sun.nio.cs.StreamEncoder.implWrite
     2004471    0.00%        2  java.nio.CharBuffer.limit
     2004191    0.00%        2  java.io.BufferedOutputStream.flushBuffer
     2004140    0.00%        2  java.nio.CharBuffer.position
     2004091    0.00%        2  ConstantPool::resolve_string_constants_impl
     2003761    0.00%        2  blk_cgroup_congested_[k]
     2003511    0.00%        2  jdk.internal.misc.Unsafe.allocateUninitializedArray0
     2002050    0.00%        2  java.lang.invoke.LambdaForm$MH.0x00007f9c4000ec00.invoke
     2000991    0.00%        2  richards.TaskState.isPacketPending
     2000911    0.00%        2  richards.DeviceTaskDataRecord.<init>
     2000781    0.00%        2  I2C/C2I adapters(0xbb)
     2000051    0.00%        2  java.lang.invoke.LambdaForm$MH.0x00007f9c4000f800.invoke
     1999740    0.00%        2  InlineCacheBuffer
     1999711    0.00%        2  __ZN41com_002eoracle_002esvm_002ecore_002ecode_002eIsolateEnterStub65CEntryPointNativeFunctions__tearDownIsolate__ke4IYWkkawAn2nvyM2ZSW5EJi37org_002egraalvm_002enativeimage_002eIsolateThread
     1999141    0.00%        2  __mod_memcg_lruvec_state_[k]
     1997941    0.00%        2  jdk.internal.org.objectweb.asm.Frame.pop
     1987150    0.00%        2  __handle_mm_fault_[k]
     1978030    0.00%        2  uncharge_folio_[k]
     1977290    0.00%        2  vmacache_find_[k]
     1713690    0.00%        2  WatcherThread::run
     1639961    0.00%        1  __memset_avx2_unaligned_erms
     1517250    0.00%        1  hrtimer_init_sleeper_[k]
     1143750    0.00%        1  plist_add_[k]
     1127790    0.00%        1  syscall_trace_enter.constprop.0_[k]
     1124011    0.00%        1  wake_up_q_[k]
     1117641    0.00%        1  __GI___pthread_mutex_unlock_usercnt
     1107870    0.00%        1  ChunkPoolCleaner::task
     1097661    0.00%        1  futex_hash_[k]
     1096311    0.00%        1  syscall_exit_work_[k]
     1091400    0.00%        1  finish_task_switch.isra.0_[k]
     1090820    0.00%        1  task_cputime_[k]
     1081940    0.00%        1  ktime_get_coarse_real_ts64_[k]
     1078221    0.00%        1  rseq_get_rseq_cs_[k]
     1077510    0.00%        1  _raw_spin_lock_[k]
     1075951    0.00%        1  os::elapsedVTime
