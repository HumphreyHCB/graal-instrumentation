--- Execution profile ---
Total samples       : 537042
unknown_Java        : 31117 (5.79%)
not_walkable_Java   : 9 (0.00%)

--- 28203005805 ns (5.25%), 28199 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 25540288620 ns (4.75%), 25537 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 23260172321 ns (4.33%), 23257 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 14555647894 ns (2.71%), 14554 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 14515154852 ns (2.70%), 14513 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 11452606471 ns (2.13%), 11451 samples
  [ 0] itable stub
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 10991641407 ns (2.05%), 10990 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 9964499387 ns (1.86%), 9963 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 8843175043 ns (1.65%), 8842 samples
  [ 0] richards.Scheduler.lambda$createDevice$0
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008660.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 7751873669 ns (1.44%), 7751 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 7519074747 ns (1.40%), 7518 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 7273900008 ns (1.35%), 7273 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 6659910891 ns (1.24%), 6659 samples
  [ 0] richards.TaskState.isWaitingWithPacket
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 5673817469 ns (1.06%), 5673 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 5399441271 ns (1.01%), 5399 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 5160651270 ns (0.96%), 5160 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 5121351495 ns (0.95%), 5121 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 5025745913 ns (0.94%), 5025 samples
  [ 0] richards.Scheduler.markWaiting
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 4874586782 ns (0.91%), 4874 samples
  [ 0] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 4864898009 ns (0.91%), 4864 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 4590517105 ns (0.85%), 4590 samples
  [ 0] richards.RBObject.append
  [ 1] richards.TaskControlBlock.addInputAndCheckPriority
  [ 2] richards.Scheduler.queuePacket
  [ 3] richards.Scheduler.lambda$createHandler$1
  [ 4] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 5] richards.TaskControlBlock.runTask
  [ 6] richards.Scheduler.schedule
  [ 7] richards.Scheduler.start
  [ 8] Richards.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 4588610877 ns (0.85%), 4588 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 4331717091 ns (0.81%), 4331 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 4179626055 ns (0.78%), 4179 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 4169656161 ns (0.78%), 4169 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createDevice$0
  [ 3] richards.Scheduler$$Lambda.0x00007fec70008660.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 4081439667 ns (0.76%), 4081 samples
  [ 0] richards.Scheduler.markWaiting
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 4061616678 ns (0.76%), 4061 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 4045507695 ns (0.75%), 4045 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3855576105 ns (0.72%), 3855 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 3752420893 ns (0.70%), 3752 samples
  [ 0] richards.TaskControlBlock.getIdentity
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 3733257103 ns (0.70%), 3733 samples
  [ 0] richards.RBObject.append
  [ 1] richards.HandlerTaskDataRecord.deviceInAdd
  [ 2] richards.Scheduler.lambda$createHandler$1
  [ 3] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 3531426160 ns (0.66%), 3531 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 3429591825 ns (0.64%), 3429 samples
  [ 0] richards.Scheduler.lambda$createDevice$0
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008660.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3361467238 ns (0.63%), 3361 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 3336596810 ns (0.62%), 3336 samples
  [ 0] richards.Scheduler.lambda$createDevice$0
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008660.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3306435483 ns (0.62%), 3306 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 3293478344 ns (0.61%), 3293 samples
  [ 0] richards.Scheduler.lambda$createDevice$0
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008660.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3188470153 ns (0.59%), 3188 samples
  [ 0] richards.Scheduler.holdSelf
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 3131324276 ns (0.58%), 3131 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3056806292 ns (0.57%), 3056 samples
  [ 0] richards.Scheduler$$Lambda.0x00007fec70008660.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 2981465263 ns (0.56%), 2981 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2900509357 ns (0.54%), 2900 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2876391360 ns (0.54%), 2876 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2864307066 ns (0.53%), 2864 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2850287120 ns (0.53%), 2850 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createDevice$0
  [ 3] richards.Scheduler$$Lambda.0x00007fec70008660.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2802394220 ns (0.52%), 2802 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2779472137 ns (0.52%), 2779 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2776386062 ns (0.52%), 2776 samples
  [ 0] richards.Scheduler.release
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2765407254 ns (0.51%), 2765 samples
  [ 0] richards.Scheduler.holdSelf
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2694428307 ns (0.50%), 2694 samples
  [ 0] richards.Scheduler.release
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2690465260 ns (0.50%), 2690 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2616413499 ns (0.49%), 2616 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2595427005 ns (0.48%), 2595 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2593533995 ns (0.48%), 2593 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2580324485 ns (0.48%), 2580 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2504334605 ns (0.47%), 2504 samples
  [ 0] richards.TaskControlBlock.getLink
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 2457317934 ns (0.46%), 2457 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 2447347982 ns (0.46%), 2447 samples
  [ 0] richards.RBObject.append
  [ 1] richards.TaskControlBlock.addInputAndCheckPriority
  [ 2] richards.Scheduler.queuePacket
  [ 3] richards.Scheduler.lambda$createHandler$1
  [ 4] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 5] richards.TaskControlBlock.runTask
  [ 6] richards.Scheduler.schedule
  [ 7] richards.Scheduler.start
  [ 8] Richards.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 2403372157 ns (0.45%), 2403 samples
  [ 0] richards.RBObject.append
  [ 1] richards.TaskControlBlock.addInputAndCheckPriority
  [ 2] richards.Scheduler.queuePacket
  [ 3] richards.Scheduler.lambda$createHandler$1
  [ 4] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 5] richards.TaskControlBlock.runTask
  [ 6] richards.Scheduler.schedule
  [ 7] richards.Scheduler.start
  [ 8] Richards.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 2355415258 ns (0.44%), 2355 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 2276295684 ns (0.42%), 2276 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] [unknown_Java]

--- 2232263828 ns (0.42%), 2232 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2180320505 ns (0.41%), 2180 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] [unknown_Java]

--- 2153370645 ns (0.40%), 2153 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2087438662 ns (0.39%), 2087 samples
  [ 0] richards.Scheduler.markWaiting
  [ 1] [unknown_Java]

--- 2057434628 ns (0.38%), 2057 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1995326270 ns (0.37%), 1995 samples
  [ 0] richards.Packet.setLink
  [ 1] richards.RBObject.append
  [ 2] richards.HandlerTaskDataRecord.deviceInAdd
  [ 3] richards.Scheduler.lambda$createHandler$1
  [ 4] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 5] richards.TaskControlBlock.runTask
  [ 6] richards.Scheduler.schedule
  [ 7] richards.Scheduler.start
  [ 8] Richards.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1978512782 ns (0.37%), 1978 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1971382190 ns (0.37%), 1971 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1965268378 ns (0.37%), 1965 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1920298057 ns (0.36%), 1920 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1865322098 ns (0.35%), 1865 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1792180361 ns (0.33%), 1792 samples
  [ 0] richards.HandlerTaskDataRecord.workIn
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1776274733 ns (0.33%), 1776 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 1758232134 ns (0.33%), 1758 samples
  [ 0] richards.TaskControlBlock.getIdentity
  [ 1] [unknown_Java]

--- 1755429192 ns (0.33%), 1755 samples
  [ 0] richards.Packet.setLink
  [ 1] [unknown_Java]

--- 1694139653 ns (0.32%), 1694 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1682282854 ns (0.31%), 1682 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1642302343 ns (0.31%), 1642 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1640183449 ns (0.31%), 1640 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1631248743 ns (0.30%), 1631 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1566186441 ns (0.29%), 1566 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createHandler$1
  [ 3] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1550265248 ns (0.29%), 1550 samples
  [ 0] richards.Scheduler.markWaiting
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1485290970 ns (0.28%), 1485 samples
  [ 0] richards.HandlerTaskDataRecord.deviceInAdd
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1476276059 ns (0.27%), 1476 samples
  [ 0] richards.DeviceTaskDataRecord.setPending
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1474147773 ns (0.27%), 1474 samples
  [ 0] richards.Scheduler.release
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1463153322 ns (0.27%), 1463 samples
  [ 0] richards.Scheduler.release
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1455147150 ns (0.27%), 1455 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1448150683 ns (0.27%), 1448 samples
  [ 0] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 1436205912 ns (0.27%), 1436 samples
  [ 0] richards.Scheduler.release
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1430134036 ns (0.27%), 1430 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1426157807 ns (0.27%), 1426 samples
  [ 0] richards.Scheduler$$Lambda.0x00007fec70008440.apply
  [ 1] [unknown_Java]

--- 1407178327 ns (0.26%), 1407 samples
  [ 0] richards.Scheduler.release
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1405179514 ns (0.26%), 1405 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1402050872 ns (0.26%), 1402 samples
  [ 0] richards.Scheduler$$Lambda.0x00007fec70008220.apply
  [ 1] [unknown_Java]

--- 1401238129 ns (0.26%), 1401 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1397227049 ns (0.26%), 1397 samples
  [ 0] richards.Scheduler.holdSelf
  [ 1] [unknown_Java]

--- 1387128719 ns (0.26%), 1387 samples
  [ 0] richards.Scheduler.release
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1369166383 ns (0.25%), 1369 samples
  [ 0] richards.Scheduler.release
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1362232844 ns (0.25%), 1362 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007fec70008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
101787149340   18.95%   101773  richards.Scheduler.schedule
 59730482678   11.12%    59722  richards.TaskControlBlock.runTask
 56981737352   10.61%    56974  richards.Scheduler.lambda$createHandler$1
 35132541744    6.54%    35128  richards.Scheduler.queuePacket
 25443657264    4.74%    25440  richards.Scheduler.lambda$createIdler$2
 23571379114    4.39%    23568  richards.Scheduler.lambda$createDevice$0
 23122740480    4.30%    23119  richards.Scheduler.lambda$createWorker$3
 20169528776    3.76%    20167  richards.RBObject.append
 19680712555    3.66%    19678  richards.TaskState.isTaskHoldingOrWaiting
 18666436749    3.48%    18664  richards.TaskControlBlock.addInputAndCheckPriority
 16511233681    3.07%    16509  richards.Scheduler.release
 15844354458    2.95%    15842  richards.Scheduler.markWaiting
 11452606471    2.13%    11451  itable stub
 10222077833    1.90%    10220  richards.Packet.setLink
 10051381462    1.87%    10050  richards.TaskState.isWaitingWithPacket
  8352280016    1.55%     8351  richards.Scheduler.holdSelf
  7128919297    1.33%     7128  richards.Scheduler$$Lambda.0x00007fec70008440.apply
  5518658449    1.03%     5518  richards.TaskControlBlock.getIdentity
  5247780981    0.98%     5247  richards.Scheduler.findTask
  5156629343    0.96%     5156  richards.TaskControlBlock.getLink
  4273918456    0.80%     4273  richards.Scheduler$$Lambda.0x00007fec70008660.apply
  4186657694    0.78%     4186  richards.Packet.getLink
  3264492704    0.61%     3264  richards.DeviceTaskDataRecord.setPending
  3241523968    0.60%     3241  richards.HandlerTaskDataRecord.workIn
  3129301646    0.58%     3129  richards.Scheduler$$Lambda.0x00007fec70008220.apply
  3013348549    0.56%     3013  richards.HandlerTaskDataRecord.deviceIn
  2737664117    0.51%     2737  richards.TaskControlBlock.getPriority
  2732404011    0.51%     2732  richards.Scheduler$$Lambda.0x00007fec70008000.apply
  2351428658    0.44%     2351  richards.HandlerTaskDataRecord.deviceInAdd
  2207288394    0.41%     2207  richards.WorkerTaskDataRecord.getCount
  2159162088    0.40%     2159  richards.TaskState.setTaskHolding
  2016211328    0.38%     2016  richards.Packet.setIdentity
  1928393552    0.36%     1928  richards.TaskState.setTaskWaiting
  1773208551    0.33%     1773  richards.Packet.getIdentity
  1730237265    0.32%     1730  richards.Packet.getDatum
  1616178746    0.30%     1616  richards.Packet.setDatum
  1548223009    0.29%     1548  richards.IdleTaskDataRecord.getCount
  1534133102    0.29%     1534  richards.IdleTaskDataRecord.getControl
  1488183193    0.28%     1488  richards.Packet.getData
  1455223925    0.27%     1455  richards.DeviceTaskDataRecord.getPending
  1303216972    0.24%     1303  richards.TaskState.running
  1274191709    0.24%     1274  richards.TaskState.setPacketPending
   942231421    0.18%      942  richards.Packet.getKind
   880110684    0.16%      880  richards.TaskState.packetPending
   831216489    0.15%      831  richards.IdleTaskDataRecord.setCount
   776645734    0.14%      777  richards.IdleTaskDataRecord.setControl
   758119355    0.14%      758  richards.WorkerTaskDataRecord.setCount
   615087223    0.11%      615  richards.HandlerTaskDataRecord.workInAdd
   354044526    0.07%      354  richards.WorkerTaskDataRecord.getDestination
   210024554    0.04%      210  I2C/C2I adapters(0xb)
   183905967    0.03%      184  __ZN41com_002eoracle_002esvm_002ecore_002ecode_002eIsolateEnterStub74TruffleToLibGraalEntryPoints__validateCompilerOption__Ujs0fEGwUTHHbobHrcnio9EJ32org_002egraalvm_002ejniutils_002eJNI_0024JString31org_002egraalvm_002ejniutils_002eJNI_0024JNIEnv31org_002egraalvm_002ejniutils_002eJNI_0024JClasslS0__S0__
   172010472    0.03%      172  richards.WorkerTaskDataRecord.setDestination
    36774762    0.01%       36  _raw_spin_unlock_irqrestore_[k]
    25006474    0.00%       25  richards.RBObject.<init>
    20374096    0.00%       19  [vdso]
    18117403    0.00%       18  clear_page_rep_[k]
    17994116    0.00%       18  richards.TaskControlBlock.<init>
    17108353    0.00%       16  __futex_abstimed_wait_common
    15167100    0.00%       14  WatcherThread::sleep
    13023932    0.00%       13  Benchmark.innerBenchmarkLoop
    10995662    0.00%       11  richards.Scheduler.start
    10528084    0.00%       10  clock_gettime@GLIBC_2.2.5
    10000454    0.00%       10  java.util.Arrays.fill
     9656206    0.00%        9  PerfLongVariant::sample
     8995351    0.00%        9  Interpreter
     8968583    0.00%        9  zap_pte_range_[k]
     8026823    0.00%        8  java.lang.invoke.DirectMethodHandle.allocateInstance
     8022003    0.00%        8  next_uptodate_page_[k]
     8002753    0.00%        8  jdk.internal.misc.Unsafe.allocateInstance
     8000993    0.00%        8  richards.Packet.<init>
     7997532    0.00%        8  richards.Scheduler.createTask
     7008333    0.00%        7  do_user_addr_fault_[k]
     6351041    0.00%        6  __GI___pthread_mutex_unlock_usercnt
     5380012    0.00%        5  futex_wait_[k]
     5070860    0.00%        5  smp_call_function_many_cond_[k]
     5060604    0.00%        5  G1ParScanThreadState::trim_queue_to_threshold
     5019131    0.00%        5  java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
     5008771    0.00%        5  java.io.PrintStream.implWriteln
     5002170    0.00%        5  Run.measure
     5002121    0.00%        5  richards.Scheduler.createPacket
     5000610    0.00%        5  Richards.benchmark
     5000341    0.00%        5  java.lang.Boolean.valueOf
     4993081    0.00%        5  __ZN41com_002eoracle_002esvm_002ecore_002ecode_002eIsolateEnterStub65CEntryPointNativeFunctions__tearDownIsolate__ke4IYWkkawAn2nvyM2ZSW5EJi37org_002egraalvm_002enativeimage_002eIsolateThread
     4301951    0.00%        4  __get_user_8_[k]
     4269200    0.00%        4  __tls_get_addr
     4037721    0.00%        4  __memmove_avx_unaligned_erms
     4030622    0.00%        4  do_anonymous_page_[k]
     4003242    0.00%        4  java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
     4001761    0.00%        4  richards.TaskState.createWaitingWithPacket
     4001402    0.00%        4  richards.Scheduler$$Lambda.0x00007fec70008660.<init>
     4000960    0.00%        4  richards.Scheduler.createWorker
     4000391    0.00%        4  richards.Scheduler.<init>
     3362840    0.00%        3  PeriodicTask::real_time_tick
     3313890    0.00%        3  syscall_enter_from_user_mode_[k]
     3278341    0.00%        3  ___pthread_mutex_unlock
     3271151    0.00%        3  StatSamplerTask::task
     3236751    0.00%        3  VMError::is_error_reported
     3227111    0.00%        3  PlatformMonitor::wait
     3201421    0.00%        3  Mutex::lock_without_safepoint_check
     3162400    0.00%        3  futex_wake_[k]
     3137340    0.00%        3  __pthread_mutex_cond_lock
     3017500    0.00%        3  vma_alloc_folio_[k]
     3004891    0.00%        3  java.lang.StringConcatHelper.mix
     3003721    0.00%        3  jdk.internal.org.objectweb.asm.ByteVector.putUTF8
     3003580    0.00%        3  java.lang.invoke.LambdaForm$MH.0x00007fec7000ec00.invoke
     3001581    0.00%        3  Run.printResult
     3001470    0.00%        3  java.lang.invoke.LambdaForm$MH.0x00007fec7000f800.invoke
     3001441    0.00%        3  _invokeBasic
     2999480    0.00%        3  java.lang.Object.<init>
     2997942    0.00%        3  /home/hburchell/Repos/graal-dev/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
     2308651    0.00%        2  __schedule_[k]
     2169520    0.00%        2  schedule_[k]
     2143680    0.00%        2  futex_q_lock_[k]
     2143401    0.00%        2  ObjectSynchronizer::is_async_deflation_needed
     2142200    0.00%        2  do_futex_[k]
     2140041    0.00%        2  InlineCacheBuffer::is_empty
     2119150    0.00%        2  __condvar_dec_grefs
     2117982    0.00%        2  Monitor::wait_without_safepoint_check
     2111520    0.00%        2  pthread_cond_timedwait@@GLIBC_2.3.2
     2100580    0.00%        2  VMThread::wait_for_operation
     2080081    0.00%        2  copy_user_generic_string_[k]
     2033221    0.00%        2  HeapRegionManager::par_iterate
     2019261    0.00%        2  prepare_alloc_pages.constprop.0_[k]
     2017150    0.00%        2  page_add_file_rmap_[k]
     2016410    0.00%        2  _dl_update_slotinfo
     2016311    0.00%        2  richards.Scheduler$$Lambda.0x00007fec70008440.<init>
     2012581    0.00%        2  jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8
     2011390    0.00%        2  __do_softirq_[k]
     2011231    0.00%        2  __mod_lruvec_page_state_[k]
     2007010    0.00%        2  copy_page_[k]
     2005980    0.00%        2  find_vma_[k]
     2005451    0.00%        2  sun.nio.cs.StreamEncoder.implWrite
     2005330    0.00%        2  java.io.FileOutputStream.write
     2005041    0.00%        2  richards.WorkerTaskDataRecord.<init>
     2004951    0.00%        2  c2v_notifyCompilerPhaseEvent
     2004491    0.00%        2  charge_memcg_[k]
     2004450    0.00%        2  JVMCIEnv::has_pending_exception
     2003920    0.00%        2  sun.nio.cs.StreamEncoder.writeBytes
     2003601    0.00%        2  java.io.BufferedWriter.write
     2003130    0.00%        2  __handle_mm_fault_[k]
     2002090    0.00%        2  java.lang.StringLatin1.getChars
     2001860    0.00%        2  CodeHeap::find_blob
     2001340    0.00%        2  richards.HandlerTaskDataRecord.<init>
     2001041    0.00%        2  richards.Scheduler.createDevice
     2000980    0.00%        2  richards.TaskState.waiting
     2000771    0.00%        2  __rcu_read_unlock_[k]
     2000490    0.00%        2  java.lang.invoke.DirectMethodHandle.internalMemberName
     1999840    0.00%        2  JVMCIEnv::JVMCIEnv
     1971320    0.00%        2  page_remove_rmap_[k]
     1121121    0.00%        1  os::elapsed_counter
     1112410    0.00%        1  _raw_spin_unlock_[k]
     1110640    0.00%        1  get_futex_key_[k]
     1106401    0.00%        1  futex_wait_queue_[k]
     1105440    0.00%        1  __hrtimer_init_[k]
     1100481    0.00%        1  __futex_queue_[k]
     1099840    0.00%        1  futex_get_value_locked_[k]
     1097590    0.00%        1  __audit_syscall_entry_[k]
     1094000    0.00%        1  __lll_lock_wake
     1092712    0.00%        1  get_timespec64_[k]
     1091720    0.00%        1  schedule_debug.constprop.0_[k]
     1090010    0.00%        1  plist_add_[k]
     1089790    0.00%        1  hrtimer_init_sleeper_[k]
     1086862    0.00%        1  sched_submit_work_[k]
     1084820    0.00%        1  futex_hash_[k]
     1076920    0.00%        1  __x64_sys_futex_[k]
     1075990    0.00%        1  _copy_from_user_[k]
     1073970    0.00%        1  __get_user_nocheck_4_[k]
     1073130    0.00%        1  ConcurrentGCThread::should_terminate
     1071771    0.00%        1  futex_setup_timer_[k]
     1071580    0.00%        1  syscall_trace_enter.constprop.0_[k]
     1065960    0.00%        1  futex_wait_setup_[k]
     1064720    0.00%        1  os::javaTimeNanos
     1063960    0.00%        1  _pthread_cleanup_pop@GLIBC_2.2.5
     1063061    0.00%        1  ktime_add_safe_[k]
     1062660    0.00%        1  __condvar_confirm_wakeup
     1056310    0.00%        1  __GI___pthread_disable_asynccancel
     1051161    0.00%        1  do_syscall_64_[k]
     1046870    0.00%        1  G1PeriodicGCTask::execute
     1046130    0.00%        1  __audit_syscall_exit_[k]
     1039780    0.00%        1  avtab_search_node_[k]
     1038330    0.00%        1  G1GCParPhaseTimesTracker::G1GCParPhaseTimesTracker
     1017880    0.00%        1  InstanceKlass::uncached_lookup_method
     1017320    0.00%        1  SpinPause
     1017230    0.00%        1  CompileQueue::get
     1015370    0.00%        1  security_task_getscheduler_[k]
     1014470    0.00%        1  nft_ct_get_eval?[nft_ct]_[k]
     1012780    0.00%        1  LinkResolver::resolve_method
     1012420    0.00%        1  Universe::swap_reference_pending_list
     1012270    0.00%        1  CodeCache::find_blob
     1010650    0.00%        1  nft_do_chain?[nf_tables]_[k]
     1010571    0.00%        1  G1CodeRootSet::nmethods_do
     1010140    0.00%        1  folio_add_lru_vma_[k]
     1009930    0.00%        1  __nf_conntrack_alloc?[nf_conntrack]_[k]
     1007750    0.00%        1  JVMCICompiler::on_empty_queue
     1007510    0.00%        1  CompileBroker::invoke_compiler_on_method
     1007400    0.00%        1  java.lang.String.indexOf
     1007390    0.00%        1  xfs_vn_update_time?[xfs]_[k]
     1007230    0.00%        1  sun.nio.cs.StreamEncoder.implFlushBuffer
     1006500    0.00%        1  inode_needs_update_time.part.0_[k]
     1006250    0.00%        1  __alloc_pages_[k]
